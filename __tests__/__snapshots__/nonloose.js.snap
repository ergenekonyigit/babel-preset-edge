// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Non Loose comments 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

function translate(value) {
  return _camelCase(value);
}"
`;

exports[`Non Loose deadcode 1`] = `"var STATIC = false;"`;

exports[`Non Loose es3: literal 1`] = `"foo[\\"catch\\"];"`;

exports[`Non Loose es3: member 1`] = `
"var foo = {
  \\"catch\\": function _catch() {}
};"
`;

exports[`Non Loose es2015: classes 1`] = `
"import _classCallCheck from \\"@babel/runtime/helpers/builtin/es6/classCallCheck\\";
import _createClass from \\"@babel/runtime/helpers/builtin/es6/createClass\\";
export var Component = function () {
  function Component() {
    _classCallCheck(this, Component);
  }

  _createClass(Component, [{
    key: \\"main\\",
    value: function main() {}
  }]);

  return Component;
}();"
`;

exports[`Non Loose es2015: for_off 1`] = `
"import \\"core-js/modules/es7.symbol.async-iterator\\";
import \\"core-js/modules/es6.symbol\\";
import \\"core-js/modules/web.dom.iterable\\";

function test() {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = tasks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      _step.value;

      try {
        executeCommands();
      } catch (error) {
        console.error(\\"Error\\");
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator[\\"return\\"] != null) {
        _iterator[\\"return\\"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}"
`;

exports[`Non Loose es2015: generator 1`] = `
"function* idMaker() {
  var index = 0;

  while (true) {
    yield index++;
  }
}"
`;

exports[`Non Loose es2015: set 1`] = `
"import \\"core-js/modules/es6.set\\";
new Set([1, 2, 3]);"
`;

exports[`Non Loose es2016: exponentiation 1`] = `"var result = Math.pow(2, 3);"`;

exports[`Non Loose esnext: async 1`] = `
"function wait() {
  return new Promise(function ($return, $error) {
    return Promise.resolve(loadData()).then(function ($await_1) {
      try {
        return $return();
      } catch ($boundEx) {
        return $error($boundEx);
      }
    }, $error);
  });
}"
`;

exports[`Non Loose esnext: class properties 1`] = `
"import _classCallCheck from \\"@babel/runtime/helpers/builtin/es6/classCallCheck\\";
import _defineProperty from \\"@babel/runtime/helpers/builtin/es6/defineProperty\\";
export var Component = function Component() {
  _classCallCheck(this, Component);

  _defineProperty(this, \\"onClick\\", function () {});
};"
`;

exports[`Non Loose esnext: dynamic import 1`] = `
"import \\"core-js/modules/es6.promise\\";
Promise.resolve().then(function () {
  return require(\\"lodash\\");
}).then(function (lodash) {
  console.log(lodash.camelCase(\\"hello world\\"));
});"
`;

exports[`Non Loose esnext: import 1`] = `
"import _camelCase from \\"lodash/camelCase\\";
console.log(_camelCase(\\"hello world\\"));"
`;

exports[`Non Loose esnext: object spread 1`] = `
"import _objectSpread from \\"@babel/runtime/helpers/builtin/es6/objectSpread\\";
var original = {
  bar: 10
};

var variant = _objectSpread({
  foo: 1
}, original);"
`;

exports[`Non Loose lodash: async 1`] = `
"import _parallel from \\"async/parallel\\";

_parallel([]);"
`;

exports[`Non Loose lodash: lodash 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

_camelCase(\\"hello world\\");"
`;

exports[`Non Loose lodash: recompose 1`] = `
"import _compose from \\"recompose/compose\\";

_compose([]);"
`;

exports[`Non Loose react: jsx 1`] = `
"var _jsxFileName = \\"./__tests__/__fixtures__/react_jsx.js\\";

function render() {
  return React.createElement(\\"h1\\", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 2
    },
    __self: this
  }, \\"Hello\\");
}"
`;

exports[`Non Loose react: jsx spread 1`] = `
"import \\"core-js/modules/es6.object.assign\\";
var _jsxFileName = \\"./__tests__/__fixtures__/react_jsx-spread.js\\";

function render(props) {
  return React.createElement(\\"h1\\", Object.assign({
    className: \\"large\\"
  }, props, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 3
    },
    __self: this
  }), \\"Hello\\");
}"
`;

exports[`Non Loose react: proptypes 1`] = `
"import _classCallCheck from \\"@babel/runtime/helpers/builtin/es6/classCallCheck\\";
import _inherits from \\"@babel/runtime/helpers/builtin/es6/inherits\\";
import _createClass from \\"@babel/runtime/helpers/builtin/es6/createClass\\";
import _possibleConstructorReturn from \\"@babel/runtime/helpers/builtin/es6/possibleConstructorReturn\\";
import _getPrototypeOf from \\"@babel/runtime/helpers/builtin/es6/getPrototypeOf\\";
var _jsxFileName = \\"./__tests__/__fixtures__/react_proptypes.js\\";
import React from \\"react\\";
import PropTypes from \\"prop-types\\";

var MyComponent = function (_React$Component) {
  function MyComponent() {
    _classCallCheck(this, MyComponent);

    return _possibleConstructorReturn(this, _getPrototypeOf(MyComponent).apply(this, arguments));
  }

  _createClass(MyComponent, [{
    key: \\"render\\",
    value: function render() {
      return React.createElement(\\"div\\", {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 6
        },
        __self: this
      }, this.props.userName);
    }
  }]);

  _inherits(MyComponent, _React$Component);

  return MyComponent;
}(React.Component);

MyComponent.propTypes = {
  userName: PropTypes.string
};"
`;
