// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Node v6 comments 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

function translate(value) {
  return _camelCase(value);
}"
`;

exports[`Node v6 deadcode 1`] = `"const STATIC = false;"`;

exports[`Node v6 es3: literal 1`] = `"foo[\\"catch\\"];"`;

exports[`Node v6 es3: member 1`] = `
"var foo = {
  \\"catch\\": function () {}
};"
`;

exports[`Node v6 es2015: classes 1`] = `
"export class Component {
  main() {}

}"
`;

exports[`Node v6 es2015: for_off 1`] = `
"function test() {
  for (const taskName of tasks) {
    try {
      executeCommands();
    } catch (error) {
      console.error(\\"Error\\");
    }
  }
}"
`;

exports[`Node v6 es2015: generator 1`] = `
"function* idMaker() {
  var index = 0;

  while (true) yield index++;
}"
`;

exports[`Node v6 es2015: set 1`] = `"new Set([1, 2, 3]);"`;

exports[`Node v6 es2016: exponentiation 1`] = `"var result = Math.pow(2, 3);"`;

exports[`Node v6 esnext: async 1`] = `
"function wait() {
  return new Promise(function ($return, $error) {
    return Promise.resolve(loadData()).then(function () {
      try {
        return $return();
      } catch ($boundEx) {
        return $error($boundEx);
      }
    }, $error);
  });
}"
`;

exports[`Node v6 esnext: async_loop 1`] = `
"function executeTasks(tasks) {
  return new Promise(function ($return, $error) {
    var $Loop_3_trampoline, $Loop_3_local;

    function $Loop_3_step() {
      var [taskName, $iterator_taskName_2] = $Loop_3_local();
      return $Loop_3.bind(this, taskName, $iterator_taskName_2);
    }

    function $Loop_3(taskName, $iterator_taskName_2) {
      $Loop_3_local = function () {
        return [taskName, $iterator_taskName_2];
      };

      if (!($iterator_taskName_2[1] = $iterator_taskName_2[0].next()).done && ((taskName = $iterator_taskName_2[1].value) || true)) {
        var $Try_1_Post = function () {
          try {
            return $Loop_3_step;
          } catch ($boundEx) {
            return $error($boundEx);
          }
        };

        var $Try_1_Catch = function () {
          try {
            console.error(\\"Error\\");
            return $Try_1_Post();
          } catch ($boundEx) {
            return $error($boundEx);
          }
        };

        try {
          return Promise.resolve(executeCommands()).then(function () {
            try {
              return $Try_1_Post();
            } catch ($boundEx) {
              return $Try_1_Catch($boundEx);
            }
          }, $Try_1_Catch);
        } catch (error) {
          $Try_1_Catch(error)
        }
      } else return [1];
    }

    return ($Loop_3_trampoline = function (q) {
      while (q) {
        if (q.then) return void q.then($Loop_3_trampoline, $error);

        try {
          if (q.pop) {
            if (q.length) return q.pop() ? $Loop_3_exit.call(this) : q;else q = $Loop_3_step;
          } else q = q.call(this);
        } catch (_exception) {
          return $error(_exception);
        }
      }
    }.bind(this))($Loop_3.bind(this, undefined, [tasks[Symbol.iterator]()]));

    function $Loop_3_exit() {
      return $return();
    }
  });
}"
`;

exports[`Node v6 esnext: class properties 1`] = `
"import _defineProperty from \\"@babel/runtime/helpers/builtin/es6/defineProperty\\";
export class Component {
  constructor() {
    _defineProperty(this, \\"onClick\\", () => {});
  }

}"
`;

exports[`Node v6 esnext: dynamic import 1`] = `
"Promise.resolve().then(() => require(\\"lodash\\")).then(lodash => {
  console.log(lodash.camelCase(\\"hello world\\"));
});"
`;

exports[`Node v6 esnext: import 1`] = `
"import _camelCase from \\"lodash/camelCase\\";
console.log(_camelCase(\\"hello world\\"));"
`;

exports[`Node v6 esnext: object spread 1`] = `
"import _objectSpread from \\"@babel/runtime/helpers/builtin/es6/objectSpread\\";
let original = {
  bar: 10
};

let variant = _objectSpread({
  foo: 1
}, original);"
`;

exports[`Node v6 lodash: async 1`] = `
"import _parallel from \\"async/parallel\\";

_parallel([]);"
`;

exports[`Node v6 lodash: lodash 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

_camelCase(\\"hello world\\");"
`;

exports[`Node v6 lodash: recompose 1`] = `
"import _compose from \\"recompose/compose\\";

_compose([]);"
`;

exports[`Node v6 react: jsx 1`] = `
"var _jsxFileName = \\"./__tests__/__fixtures__/react_jsx.js\\";

function render() {
  return React.createElement(\\"h1\\", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 2
    },
    __self: this
  }, \\"Hello\\");
}"
`;

exports[`Node v6 react: jsx spread 1`] = `
"var _jsxFileName = \\"./__tests__/__fixtures__/react_jsx-spread.js\\";

function render(props) {
  return React.createElement(\\"h1\\", Object.assign({
    className: \\"large\\"
  }, props, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 3
    },
    __self: this
  }), \\"Hello\\");
}"
`;

exports[`Node v6 react: proptypes 1`] = `
"var _jsxFileName = \\"./__tests__/__fixtures__/react_proptypes.js\\";
import React from \\"react\\";
import PropTypes from \\"prop-types\\";

class MyComponent extends React.Component {
  render() {
    return React.createElement(\\"div\\", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 6
      },
      __self: this
    }, this.props.userName);
  }

}

MyComponent.propTypes = {
  userName: PropTypes.string
};"
`;
