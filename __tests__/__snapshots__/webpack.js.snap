// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deadcode 1`] = `"var STATIC = false;"`;

exports[`es3: literal 1`] = `"foo[\\"catch\\"];"`;

exports[`es3: member 1`] = `
"var foo = {
  \\"catch\\": function _catch() {}
};"
`;

exports[`es2015: classes 1`] = `
"import _classCallCheck from \\"babel-runtime/helpers/classCallCheck\\";
export var Component = function () {
  function Component() {
    _classCallCheck(this, Component);
  }

  Component.prototype.main = function main() {};

  return Component;
}();"
`;

exports[`es2015: generator 1`] = `
"function* idMaker() {
  var index = 0;
  while (true) {
    yield index++;
  }
}"
`;

exports[`es2015: set 1`] = `"new Set([1, 2, 3]);"`;

exports[`es2016: exponentiation 1`] = `"var result = Math.pow(2, 3);"`;

exports[`esnext: async 1`] = `
"import _default from \\"nodent-runtime\\";
function wait() {
  return new Promise(function ($return, $error) {
    return loadData().then(function ($await_1) {
      return $return();
    }.$asyncbind(this, $error), $error);
  }.$asyncbind(this));
}"
`;

exports[`esnext: class properties 1`] = `
"import _classCallCheck from \\"babel-runtime/helpers/classCallCheck\\";
export var Component = function Component() {
  _classCallCheck(this, Component);

  this.onClick = function () {};
};"
`;

exports[`esnext: dynamic import 1`] = `
"import _path from \\"path\\";
import _importCss from \\"babel-plugin-universal-import/importCss.js\\";
import _universalImport from \\"babel-plugin-universal-import/universalImport.js\\";
_universalImport({
  id: \\"lodash\\",
  file: \\"./__tests__/__fixtures__/esnext_dynamic-import.js\\",
  load: function load() {
    return Promise.all([import( /* webpackChunkName: 'lodash' */\\"lodash\\"), _importCss(\\"lodash\\")]).then(function (proms) {
      return proms[0];
    });
  },
  path: function path() {
    return _path.join(__dirname, \\"lodash\\");
  },
  resolve: function resolve() {
    return require.resolveWeak(\\"lodash\\");
  },
  chunkName: function chunkName() {
    return \\"lodash\\";
  }
}).then(function (lodash) {
  console.log(lodash.camelCase(\\"hello world\\"));
});"
`;

exports[`esnext: import 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

console.log(_camelCase(\\"hello world\\"));"
`;

exports[`esnext: object spread 1`] = `
"var original = { bar: 10 };
var variant = Object.assign({ foo: 1 }, original);"
`;

exports[`lodash: async 1`] = `
"import _parallel from \\"async/parallel\\";

_parallel([]);"
`;

exports[`lodash: lodash 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

_camelCase(\\"hello world\\");"
`;

exports[`lodash: recompose 1`] = `
"import _compose from \\"recompose/compose\\";

_compose([]);"
`;

exports[`react: jsx 1`] = `
"var _jsxFileName = \\"./__tests__/__fixtures__/react_jsx.js\\";
function render() {
  return React.createElement(
    \\"h1\\",
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 2
      },
      __self: this
    },
    \\"Hello\\"
  );
}"
`;

exports[`react: jsx spread 1`] = `
"var _jsxFileName = \\"./__tests__/__fixtures__/react_jsx-spread.js\\";
function render(props) {
  return React.createElement(
    \\"h1\\",
    Object.assign({ className: \\"large\\" }, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 3
      },
      __self: this
    }),
    \\"Hello\\"
  );
}"
`;

exports[`react: proptypes 1`] = `
"import _classCallCheck from \\"babel-runtime/helpers/classCallCheck\\";
import _possibleConstructorReturn from \\"babel-runtime/helpers/possibleConstructorReturn\\";
import _inherits from \\"babel-runtime/helpers/inherits\\";
var _jsxFileName = \\"./__tests__/__fixtures__/react_proptypes.js\\";
import React from \\"react\\";
import PropTypes from \\"prop-types\\";

var MyComponent = function (_React$Component) {
  _inherits(MyComponent, _React$Component);

  function MyComponent() {
    _classCallCheck(this, MyComponent);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  MyComponent.prototype.render = function render() {
    return React.createElement(
      \\"div\\",
      {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 6
        },
        __self: this
      },
      this.props.userName
    );
  };

  return MyComponent;
}(React.Component);

MyComponent.propTypes = {
  userName: PropTypes.string
};"
`;
