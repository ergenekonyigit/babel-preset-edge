// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deadcode 1`] = `
"const STATIC = !1;
STATIC, !1;"
`;

exports[`es3: literal 1`] = `"foo[\\"catch\\"];"`;

exports[`es3: member 1`] = `
"var foo = {
  catch: function () {}
};"
`;

exports[`es2015: classes 1`] = `""`;

exports[`es2015: generator 1`] = `
"function* idMaker() {
  for (var a = 0;;) yield a++;
}"
`;

exports[`es2015: set 1`] = `"new Set([1, 2, 3]);"`;

exports[`es2016: exponentiation 1`] = `"var result = 8;"`;

exports[`esnext: async 1`] = `
"import _default from \\"nodent-runtime\\";
function wait() {
  return new Promise(function (a, b) {
    return loadData().then(function () {
      return a();
    }.$asyncbind(this, b), b);
  }.$asyncbind(this));
}"
`;

exports[`esnext: class properties 1`] = `""`;

exports[`esnext: dynamic import 1`] = `
"Promise.resolve().then(() => require(\\"lodash\\")).then((a) => {
  console.log(a.camelCase(\\"hello world\\"));
});"
`;

exports[`esnext: import 1`] = `
"import _camelCase from \\"lodash/camelCase\\";
console.log(_camelCase(\\"hello world\\"));"
`;

exports[`esnext: object spread 1`] = `
"let original = { bar: 10 },
    variant = Object.assign({ foo: 1 }, original);"
`;

exports[`lodash: async 1`] = `
"import _parallel from \\"async/parallel\\";

_parallel([]);"
`;

exports[`lodash: lodash 1`] = `
"import _camelCase from \\"lodash/camelCase\\";

_camelCase(\\"hello world\\");"
`;

exports[`lodash: recompose 1`] = `
"import _compose from \\"recompose/compose\\";

_compose([]);"
`;

exports[`react: jsx 1`] = `
"import _jsx from \\"babel-runtime/helpers/jsx\\";
function render() {
  return _jsx(\\"h1\\", {}, void 0, \\"Hello\\");
}"
`;

exports[`react: jsx spread 1`] = `
"function render(a) {
  return React.createElement(
    \\"h1\\",
    Object.assign({ className: \\"large\\" }, a),
    \\"Hello\\"
  );
}"
`;

exports[`react: proptypes 1`] = `
"import _jsx from \\"babel-runtime/helpers/jsx\\";
import React from \\"react\\";


class MyComponent extends React.Component {
  render() {
    return _jsx(\\"div\\", {}, void 0, this.props.userName);
  }
}"
`;
